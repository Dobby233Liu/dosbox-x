name: Build for Linux & DOS (LOADLIN)
on:
  push:
  pull_request:
  release:
    types: [published]
    
jobs:
  linux_ubuntu:
    name: Build on Ubuntu
    
    runs-on: ubuntu-latest
    strategy:
      matrix:
        variant: ["", -sdl2]
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      
      - name: Install dependencies
        run: sudo apt install automake gcc g++ make libncurses-dev nasm libsdl-net1.2-dev libsdl2-net-dev libpcap-dev libslirp-dev fluidsynth libfluidsynth-dev libavdevice58 libavformat-dev libavcodec-dev libavcodec-extra libavcodec-extra58 libswscale-dev libfreetype-dev libxkbfile-dev libxrandr-dev
      
      # TODO: tests?
      # also i wonder why the debug variant is preferred?
      - name: Build & Install
        env:
          RUN_NSUFF: ${{ matrix.variant }}
        run: |
          chmod +x build-debug$RUN_NSUFF
          ./build-debug$RUN_NSUFF
          sudo make install
  
  build_rpm:
    name: Build RPM on Fedora
    #if: github.event_name == 'release'
    
    runs-on: ubuntu-latest
    container: fedora:latest
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        
      - name: Install dependencies
        run: |
          sudo dnf group install "C Development Tools and Libraries" -y
          sudo dnf group install "RPM Development Tools" -y
          sudo dnf install -y https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm
          sudo dnf install -y SDL_net-devel SDL2_net-devel libxkbfile-devel ncurses-devel libpcap-devel libslirp-devel libpng-devel fluidsynth-devel freetype-devel nasm desktop-file-utils libappstream-glib pulseaudio-libs-devel ffmpeg-devel
      # TODO: Should we build SDL2 version too?
      - name: Build RPM
        id: build-rpm
        run: |
          ./autogen.sh
          chmod +x configure
          ./configure --enable-core-inline --enable-debug=heavy --prefix=/usr
          ln -s /home ~
          mkdir -p ~/rpmbuild/SOURCES/
          ./make-rpm.sh
          mv release/linux-ID=fedora release/linux
          i=0
          for filename in release/linux/*.rpm; do
            [ -e "$filename" ] || continue
            i+=1
            echo "::set-output name=i$i::$filename"
            echo $filename
          done
        
      - name: Upload RPMs as artifacts
        uses: actions/upload-artifact@v2
        with:
          name: rpms-fedora
          path: release/linux
      # FIXME what the ****
      - name: Upload to invoking Release
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }} 
          asset_path: ${{ steps.build-rpm.outputs.i1 }}
          asset_name: ${{ steps.build-rpm.outputs.i1 }}
          asset_content_type: application/octet-stream
      - name: Upload to invoking Release
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }} 
          asset_path: ${{ steps.build-rpm.outputs.i2 }}
          asset_name: ${{ steps.build-rpm.outputs.i2 }}
          asset_content_type: application/octet-stream
      - name: Upload to invoking Release
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }} 
          asset_path: ${{ steps.build-rpm.outputs.i3 }}
          asset_name: ${{ steps.build-rpm.outputs.i3 }}
          asset_content_type: application/octet-stream
